<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
pre
	{mso-style-link:"HTML Preformatted Char";
	margin:0in;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:"Courier New";}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
span.HTMLPreformattedChar
	{mso-style-name:"HTML Preformatted Char";
	mso-style-link:"HTML Preformatted";
	font-family:"Courier New";}
.MsoChpDefault
	{font-family:"Calibri",sans-serif;}
.MsoPapDefault
	{margin-bottom:8.0pt;
	line-height:107%;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

<body lang=EN-US>

<div class=WordSection1>

<p class=MsoNormal>Check the sanity of the data…. Run Str(xx), head(xx),
tail(xx) etc…</p>

<p class=MsoNormal>Exclude variables with missing values that start with….Max,
min, amplitude, var, stddev, avg, kurtosis, skewness. Use the starts_-with
function to so this</p>

<p class=MsoNormal>Exclude the first 7 variables since they do not seem to be
useful in the prediction process and since it has been mentioned in the
instruction for this assignment that we could use any of the predictors</p>

<p class=MsoNormal>Exploratory analysis.</p>

<p class=MsoListParagraph style='text-indent:-.25in'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Have a look at the frequency of the response variable, “classe”. The observation
is that there is a fair representation of the different classes in the classe variable
in the data. This is done using the table(training_assig3$classe)%&gt;%barplot(col=&quot;grey&quot;)</p>

<p class=MsoNormal>The prediction process:</p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>The
first step was to fit a classification tree algorithm to the training dataset. This
was done  using the tree function given  as.. <i>Class_tree2=tree(classe~.,Train_sets)
</i>which could also be run using the train and rpart functions which are given
by <i>train(classe~.,method=&quot;rpart&quot;,data=training_assig3)</i> and  <i>rpart(classe~.,data=training_assig3,
method=”class”)</i> respectively. These methods however gave different rates of
accuracy on the test set which is 66%, 50% and 75% respectively.</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Next,
we use cross validation to prune the trees above to see if we can get improved
results. For this the result of the <b><i>tree</i></b> function illustrated
above is used. Running the summary of the tree ,<i>Summary(class_tree2)</i> shows
that we have 18 terminal nodes. Running cross validation on this tree as <i>cv.class_tree2=cv.tree(class_tree2,FUN=prune.misclass)</i>
also gives 18 terminal nodes which give the smallest cross validation erro
rate. Therefore, we can see that pruning doesn’t really improve the results and
we do not need to run the pruning function. Cv.tree runs a k-fold cross
validation to find the deviance as a function of a cost-complexity parameter. If
not specified, cv.tree uses a 10 fold cross validation, which is the case above
</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span> Next
we apply “bagging” to the data as <i>cv.class.bag=randomForest(classe~.,data=Train_sets,mtry=52,importance=TRUE)
 </i>where mtry=52 means that we are using all the predictors. Applying the prediction
to the test set as <i>predict(cv.class.rf,Test_sets)</i>  and calculating the
accuracy gives a 98% accuracy</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Then
we apply randomForest to the training dataset as <i>randomForest(classe~.,data=Train_sets,mtry=8,importance=TRUE)</i>
where mtry=8 is an approximate value used for sqrt(number of predictors).
Random forest also gives a high accura y rate of 99.4%</p>

<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Next,
I use the machine learning algorithm in 4. above (randomForest) to predict the 20
test cases. Before running the prediction on the test set, I remove all the
variables I removed from the training dataset from the test datasets as well. Once
i have matching the variables names of the training dataset and test set,   I apply
the prediction as <i>predict_20_cases=predict(predict(cv.class.rf,testing_assig3)</i>
testing_assig3 being the test dataset with 20 observations. The prediction is
as follows in the order given by the test dataset. B  A  B  A  A  E  D  B  A 
A  B  C  B  A  E  E  A  B  B  B </p>

<p class=MsoNormal>&nbsp;</p>

</div>

</body>

</html>
